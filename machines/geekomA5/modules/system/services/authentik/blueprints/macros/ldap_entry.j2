{% import "macros/utils.j2" as utils with context %}
{% import "global_utils.j2" as global_utils with context %}

{% macro ldap_entry(name, slug, group, url, icon, access_group) -%}
  {% if url is defined %}
{% set final_url = url %}
  {% else %}
{% set final_url = global_utils.generate_url(slug) %}
  {% endif %}
  {% if icon is defined %}
{% set final_icon = icon %}
  {% else %}
{% set final_icon = global_utils.generate_icon(slug) %}
  {% endif %}
# yaml-language-server: $schema=https://version-2024-10.goauthentik.io/blueprints/schema.json
version: 1
metadata:
  name: {{ slug }}
  labels:
    blueprints.goauthentik.io/description: "Setup {{ name }} LDAP Provider & Application"
entries:
  - model: authentik_providers_ldap.ldapprovider
    id: provider
    state: present
    identifiers:
      name: {{ name }}
    permissions:
      - permission: search_full_directory
        user: !Find [authentik_core.user, [username, ldap]]
    attrs:
      authorization_flow: !Find [authentik_flows.flow, [slug, default-authentication-flow]]
      invalidation_flow: !Find [authentik_flows.flow, [slug, default-invalidation-flow]]
      base_dn: "OU={{ slug }},DC=ldap,DC=goauthentik,DC=io"
      bind_mode: direct
      search_mode: direct
      uid_start_number: 2000
      gid_start_number: 4000

  - model: authentik_core.application
    id: application
    state: present
    id: application
    identifiers:
      name: {{ name }}
      slug: {{ slug }}
    attrs:
      provider: !KeyOf provider
      policy_engine_mode: any
      open_in_new_tab: true
      icon: {{ final_icon }}
      meta_launch_url: {{ final_url }}
  {% if group is defined %}
      group: {{ group }}
  {% endif %}
  {% if access_group is defined -%}
  {{ utils.generate_group_policy(access_group) | indent(2, True) }}
  {% endif %}
{% endmacro %}

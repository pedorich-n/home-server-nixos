{% import "macros/utils.j2" as utils with context %}
{% import "global_utils.j2" as global_utils with context %}

{% macro proxy_entry(name, slug, application_group, url, icon, access_group, access_token_validity="days=30", refresh_token_validity="days=180") -%}
  {% if url is defined %}
{% set final_url = url %}
  {% else %}
{% set final_url = global_utils.generate_url(slug) %}
  {% endif %}
  {% if icon is defined %}
{% set final_icon = icon %}
  {% else %}
{% set final_icon = global_utils.generate_icon(slug) %}
  {% endif %}
# yaml-language-server: $schema=https://version-2024-8.goauthentik.io/blueprints/schema.json
version: 1
metadata:
  name: {{ slug }}
  labels:
    blueprints.goauthentik.io/description: "Setup {{ name }} Proxy Provider & Application"
entries:
  - model: authentik_providers_proxy.proxyprovider
    id: provider
    state: present
    identifiers:
      name: {{ name }}
    attrs:
      authentication_flow: !Find [authentik_flows.flow, [slug, default-authentication-flow]]
      authorization_flow: !Find [authentik_flows.flow, [slug, default-provider-authorization-implicit-consent]]
      invalidation_flow: !Find [authentik_flows.flow, [slug, default-invalidation-flow]]
      mode: forward_single
      access_token_validity: {{ access_token_validity }}
      refresh_token_validity: {{ refresh_token_validity }}
      external_host: {{ final_url }}

  - model: authentik_core.application
    state: present
    id: application
    identifiers:
      name: {{ name }}
      slug: {{ slug }}
    attrs:
      provider: !KeyOf provider
      open_in_new_tab: true
      meta_launch_url: {{ final_url }}
      icon: {{ final_icon }}
  {% if application_group is defined %}
      group: {{ application_group }}
  {% endif %}

  {% if access_group is defined -%}
  {{ utils.generate_group_policy(access_group) | indent(2, True) }}
  {% endif %}
{% endmacro %}
